{"version":3,"sources":["webpack://SVGMap/webpack/universalModuleDefinition","webpack://SVGMap/webpack/bootstrap","webpack://SVGMap/./src/scss/main.scss","webpack://SVGMap/./src/svg-map/default-options.js","webpack://SVGMap/./src/svg-map/countries.js","webpack://SVGMap/./src/svg-map/utils.js","webpack://SVGMap/./src/index.js"],"names":["targetElementID","targetElement","minZoom","maxZoom","initialZoom","zoomScaleSensitivity","mouseWheelZoomEnabled","colorMax","colorMin","colorNoData","flagType","flagURL","hideFlag","noDataText","countries","EH","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BR","IO","VG","BN","BG","BF","BI","KH","CM","CA","CV","BQ","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CK","CR","HR","CU","CW","CY","CZ","CD","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FM","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GN","GW","GY","HT","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","CI","JM","JP","JE","JO","KZ","KE","KI","XK","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","KP","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","SH","KN","LC","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","KR","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","VI","UY","UZ","VU","VA","VE","VN","WF","YE","ZM","ZW","createElement","type","className","appendTo","innerhtml","element","document","split","forEach","item","classList","add","innerHTML","appendChild","numberWithCommas","number","separator","String","replace","getColor","color1","color2","ratio","slice","r","Math","ceil","parseInt","substring","g","b","getHex","value","toString","SVGMap","options","getElementById","TypeError","defaultOptions","id","btoa","random","wrapper","createMap","applyData","data","min","max","Object","keys","values","countryCode","thresholdMax","thresholdMin","setAttribute","color","fitToData","mapWrapper","mapWidth","offsetWidth","mapHeight","offsetHeight","scaleFactor","mapCenterPoint","points","map","mapImage","querySelector","filter","path","reduce","accumulator","pathDefinition","attributes","d","match","string","command","charAt","coordinates","coordinate","parseFloat","trim","push","unshift","currentPoint","definition","x","y","absoluteCoordinates","a","resetMapZoom","length","minX","minY","maxX","maxY","boundingBoxWidth","boundingBoxHeight","xZoomFactor","yZoomFactor","mapPanZoom","pan","zoom","round","countryNames"],"mappings":"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","file":"svg-map.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SVGMap\"] = factory();\n\telse\n\t\troot[\"SVGMap\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// extracted by mini-css-extract-plugin\nexport {};","// Default options, pass a custom options object to overwrite specific\r\nexport default {\r\n    // The id of the element to render the map in\r\n    targetElementID: '',\r\n\r\n    // The element to render the map in\r\n    targetElement: null,\r\n\r\n    // Minimum and maximum zoom\r\n    minZoom: 1,\r\n    maxZoom: 25,\r\n\r\n    // Initial zoom\r\n    initialZoom: 1.06,\r\n\r\n    // Zoom sensitivity\r\n    zoomScaleSensitivity: 0.2,\r\n\r\n    // Zoom with mousewheel\r\n    mouseWheelZoomEnabled: true,\r\n\r\n    // Data colors\r\n    colorMax: '#CC0033',\r\n    colorMin: '#FFE5D9',\r\n    colorNoData: '#E2E2E2',\r\n\r\n    // The flag type can be 'image' or 'emoji'\r\n    flagType: 'image',\r\n\r\n    // The URL to the flags when using flag type 'image', {0} will get replaced with the lowercase country id\r\n    flagURL: 'https://cdn.jsdelivr.net/gh/hjnilsson/country-flags@latest/svg/{0}.svg',\r\n\r\n    // Decide whether to show the flag option or not\r\n    hideFlag: false,\r\n\r\n    // The default text to be shown when no data is present\r\n    noDataText: 'No data available',\r\n\r\n    // Country specific options\r\n    countries: {\r\n        // Western Sahara: Set to false to combine Morocco (MA) and Western Sahara (EH)\r\n        EH: true\r\n    }\r\n};","export default {\r\n\tAF: 'Afghanistan',\r\n\tAX: 'Åland Islands',\r\n\tAL: 'Albania',\r\n\tDZ: 'Algeria',\r\n\tAS: 'American Samoa',\r\n\tAD: 'Andorra',\r\n\tAO: 'Angola',\r\n\tAI: 'Anguilla',\r\n\tAQ: 'Antarctica',\r\n\tAG: 'Antigua and Barbuda',\r\n\tAR: 'Argentina',\r\n\tAM: 'Armenia',\r\n\tAW: 'Aruba',\r\n\tAU: 'Australia',\r\n\tAT: 'Austria',\r\n\tAZ: 'Azerbaijan',\r\n\tBS: 'Bahamas',\r\n\tBH: 'Bahrain',\r\n\tBD: 'Bangladesh',\r\n\tBB: 'Barbados',\r\n\tBY: 'Belarus',\r\n\tBE: 'Belgium',\r\n\tBZ: 'Belize',\r\n\tBJ: 'Benin',\r\n\tBM: 'Bermuda',\r\n\tBT: 'Bhutan',\r\n\tBO: 'Bolivia',\r\n\tBA: 'Bosnia and Herzegovina',\r\n\tBW: 'Botswana',\r\n\tBR: 'Brazil',\r\n\tIO: 'British Indian Ocean Territory',\r\n\tVG: 'British Virgin Islands',\r\n\tBN: 'Brunei Darussalam',\r\n\tBG: 'Bulgaria',\r\n\tBF: 'Burkina Faso',\r\n\tBI: 'Burundi',\r\n\tKH: 'Cambodia',\r\n\tCM: 'Cameroon',\r\n\tCA: 'Canada',\r\n\tCV: 'Cape Verde',\r\n\tBQ: 'Caribbean Netherlands',\r\n\tKY: 'Cayman Islands',\r\n\tCF: 'Central African Republic',\r\n\tTD: 'Chad',\r\n\tCL: 'Chile',\r\n\tCN: 'China',\r\n\tCX: 'Christmas Island',\r\n\tCC: 'Cocos Islands',\r\n\tCO: 'Colombia',\r\n\tKM: 'Comoros',\r\n\tCG: 'Congo',\r\n\tCK: 'Cook Islands',\r\n\tCR: 'Costa Rica',\r\n\tHR: 'Croatia',\r\n\tCU: 'Cuba',\r\n\tCW: 'Curaçao',\r\n\tCY: 'Cyprus',\r\n\tCZ: 'Czech Republic',\r\n\tCD: 'Democratic Republic of the Congo',\r\n\tDK: 'Denmark',\r\n\tDJ: 'Djibouti',\r\n\tDM: 'Dominica',\r\n\tDO: 'Dominican Republic',\r\n\tEC: 'Ecuador',\r\n\tEG: 'Egypt',\r\n\tSV: 'El Salvador',\r\n\tGQ: 'Equatorial Guinea',\r\n\tER: 'Eritrea',\r\n\tEE: 'Estonia',\r\n\tET: 'Ethiopia',\r\n\tFK: 'Falkland Islands',\r\n\tFO: 'Faroe Islands',\r\n\tFM: 'Federated States of Micronesia',\r\n\tFJ: 'Fiji',\r\n\tFI: 'Finland',\r\n\tFR: 'France',\r\n\tGF: 'French Guiana',\r\n\tPF: 'French Polynesia',\r\n\tTF: 'French Southern Territories',\r\n\tGA: 'Gabon',\r\n\tGM: 'Gambia',\r\n\tGE: 'Georgia',\r\n\tDE: 'Germany',\r\n\tGH: 'Ghana',\r\n\tGI: 'Gibraltar',\r\n\tGR: 'Greece',\r\n\tGL: 'Greenland',\r\n\tGD: 'Grenada',\r\n\tGP: 'Guadeloupe',\r\n\tGU: 'Guam',\r\n\tGT: 'Guatemala',\r\n\tGN: 'Guinea',\r\n\tGW: 'Guinea-Bissau',\r\n\tGY: 'Guyana',\r\n\tHT: 'Haiti',\r\n\tHN: 'Honduras',\r\n\tHK: 'Hong Kong',\r\n\tHU: 'Hungary',\r\n\tIS: 'Iceland',\r\n\tIN: 'India',\r\n\tID: 'Indonesia',\r\n\tIR: 'Iran',\r\n\tIQ: 'Iraq',\r\n\tIE: 'Ireland',\r\n\tIM: 'Isle of Man',\r\n\tIL: 'Israel',\r\n\tIT: 'Italy',\r\n\tCI: 'Ivory Coast',\r\n\tJM: 'Jamaica',\r\n\tJP: 'Japan',\r\n\tJE: 'Jersey',\r\n\tJO: 'Jordan',\r\n\tKZ: 'Kazakhstan',\r\n\tKE: 'Kenya',\r\n\tKI: 'Kiribati',\r\n\tXK: 'Kosovo',\r\n\tKW: 'Kuwait',\r\n\tKG: 'Kyrgyzstan',\r\n\tLA: 'Laos',\r\n\tLV: 'Latvia',\r\n\tLB: 'Lebanon',\r\n\tLS: 'Lesotho',\r\n\tLR: 'Liberia',\r\n\tLY: 'Libya',\r\n\tLI: 'Liechtenstein',\r\n\tLT: 'Lithuania',\r\n\tLU: 'Luxembourg',\r\n\tMO: 'Macau',\r\n\tMK: 'Macedonia',\r\n\tMG: 'Madagascar',\r\n\tMW: 'Malawi',\r\n\tMY: 'Malaysia',\r\n\tMV: 'Maldives',\r\n\tML: 'Mali',\r\n\tMT: 'Malta',\r\n\tMH: 'Marshall Islands',\r\n\tMQ: 'Martinique',\r\n\tMR: 'Mauritania',\r\n\tMU: 'Mauritius',\r\n\tYT: 'Mayotte',\r\n\tMX: 'Mexico',\r\n\tMD: 'Moldova',\r\n\tMC: 'Monaco',\r\n\tMN: 'Mongolia',\r\n\tME: 'Montenegro',\r\n\tMS: 'Montserrat',\r\n\tMA: 'Morocco',\r\n\tMZ: 'Mozambique',\r\n\tMM: 'Myanmar',\r\n\tNA: 'Namibia',\r\n\tNR: 'Nauru',\r\n\tNP: 'Nepal',\r\n\tNL: 'Netherlands',\r\n\tNC: 'New Caledonia',\r\n\tNZ: 'New Zealand',\r\n\tNI: 'Nicaragua',\r\n\tNE: 'Niger',\r\n\tNG: 'Nigeria',\r\n\tNU: 'Niue',\r\n\tNF: 'Norfolk Island',\r\n\tKP: 'North Korea',\r\n\tMP: 'Northern Mariana Islands',\r\n\tNO: 'Norway',\r\n\tOM: 'Oman',\r\n\tPK: 'Pakistan',\r\n\tPW: 'Palau',\r\n\tPS: 'Palestine',\r\n\tPA: 'Panama',\r\n\tPG: 'Papua New Guinea',\r\n\tPY: 'Paraguay',\r\n\tPE: 'Peru',\r\n\tPH: 'Philippines',\r\n\tPN: 'Pitcairn Islands',\r\n\tPL: 'Poland',\r\n\tPT: 'Portugal',\r\n\tPR: 'Puerto Rico',\r\n\tQA: 'Qatar',\r\n\tRE: 'Reunion',\r\n\tRO: 'Romania',\r\n\tRU: 'Russia',\r\n\tRW: 'Rwanda',\r\n\tSH: 'Saint Helena',\r\n\tKN: 'Saint Kitts and Nevis',\r\n\tLC: 'Saint Lucia',\r\n\tPM: 'Saint Pierre and Miquelon',\r\n\tVC: 'Saint Vincent and the Grenadines',\r\n\tWS: 'Samoa',\r\n\tSM: 'San Marino',\r\n\tST: 'São Tomé and Príncipe',\r\n\tSA: 'Saudi Arabia',\r\n\tSN: 'Senegal',\r\n\tRS: 'Serbia',\r\n\tSC: 'Seychelles',\r\n\tSL: 'Sierra Leone',\r\n\tSG: 'Singapore',\r\n\tSX: 'Sint Maarten',\r\n\tSK: 'Slovakia',\r\n\tSI: 'Slovenia',\r\n\tSB: 'Solomon Islands',\r\n\tSO: 'Somalia',\r\n\tZA: 'South Africa',\r\n\tGS: 'South Georgia and the South Sandwich Islands',\r\n\tKR: 'South Korea',\r\n\tSS: 'South Sudan',\r\n\tES: 'Spain',\r\n\tLK: 'Sri Lanka',\r\n\tSD: 'Sudan',\r\n\tSR: 'Suriname',\r\n\tSJ: 'Svalbard and Jan Mayen',\r\n\tSZ: 'Eswatini',\r\n\tSE: 'Sweden',\r\n\tCH: 'Switzerland',\r\n\tSY: 'Syria',\r\n\tTW: 'Taiwan',\r\n\tTJ: 'Tajikistan',\r\n\tTZ: 'Tanzania',\r\n\tTH: 'Thailand',\r\n\tTL: 'Timor-Leste',\r\n\tTG: 'Togo',\r\n\tTK: 'Tokelau',\r\n\tTO: 'Tonga',\r\n\tTT: 'Trinidad and Tobago',\r\n\tTN: 'Tunisia',\r\n\tTR: 'Turkey',\r\n\tTM: 'Turkmenistan',\r\n\tTC: 'Turks and Caicos Islands',\r\n\tTV: 'Tuvalu',\r\n\tUG: 'Uganda',\r\n\tUA: 'Ukraine',\r\n\tAE: 'United Arab Emirates',\r\n\tGB: 'United Kingdom',\r\n\tUS: 'United States',\r\n\tUM: 'United States Minor Outlying Islands',\r\n\tVI: 'United States Virgin Islands',\r\n\tUY: 'Uruguay',\r\n\tUZ: 'Uzbekistan',\r\n\tVU: 'Vanuatu',\r\n\tVA: 'Vatican City',\r\n\tVE: 'Venezuela',\r\n\tVN: 'Vietnam',\r\n\tWF: 'Wallis and Futuna',\r\n\tEH: 'Western Sahara',\r\n\tYE: 'Yemen',\r\n\tZM: 'Zambia',\r\n\tZW: 'Zimbabwe'\r\n};","// Helper to create an element with a class name\r\nexport const createElement = (type, className, appendTo, innerhtml) => {\r\n\tconst element = document.createElement(type);\r\n\tif (className) {\r\n\t\tclassName = className.split(' ');\r\n\t\tclassName.forEach(item => element.classList.add(item));\r\n\t}\r\n\tinnerhtml && (element.innerHTML = innerhtml);\r\n\tappendTo && appendTo.appendChild(element);\r\n\treturn element;\r\n};\r\n\r\n// Print numbers with commas\r\nexport const numberWithCommas = (number, separator = ',') => {\r\n\treturn String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n};\r\n\r\n// Get a color between two other colors\r\nexport const getColor = (color1, color2, ratio) => {\r\n\tcolor1 = color1.slice(-6);\r\n\tcolor2 = color2.slice(-6);\r\n\tconst r = Math.ceil(parseInt(color1.substring(0, 2), 16) * ratio + parseInt(color2.substring(0, 2), 16) * (1 - ratio));\r\n\tconst g = Math.ceil(parseInt(color1.substring(2, 4), 16) * ratio + parseInt(color2.substring(2, 4), 16) * (1 - ratio));\r\n\tconst b = Math.ceil(parseInt(color1.substring(4, 6), 16) * ratio + parseInt(color2.substring(4, 6), 16) * (1 - ratio));\r\n\treturn '#' + this.getHex(r) + this.getHex(g) + this.getHex(b);\r\n};\r\n\r\n// Get a hex value\r\nexport const getHex = value => {\r\n\tvalue = value.toString(16);\r\n\treturn ('0' + value).slice(-2);\r\n};","import defaultOptions from './svg-map/default-options';\r\nimport countries from './svg-map/countries';\r\nimport { getColor } from \"./svg-map/utils\";\r\nexport default class SVGMap {\r\n\tconstructor(options = {}) {\r\n\t\tif (!options.targetElementID || !document.getElementById(options.targetElementID)) {\r\n\t\t\tif (!options.targetElement) throw new TypeError('Target element not found');\r\n\t\t}\r\n\t\tthis.options = { ...defaultOptions, ...options };\r\n\t\t// Global id\r\n\t\tthis.id = this.options.targetElementID || btoa(Math.random());\r\n\r\n\t\t// Cache wrapper element\r\n\t\tthis.wrapper = this.options.targetElementID ? document.getElementById(this.options.targetElementID) : this.options.targetElement;\r\n\r\n\t\t// Create the map\r\n\t\tthis.createMap();\r\n\r\n\t\t// Apply map data\r\n\t\tthis.applyData(this.options.data);\r\n\t}\r\n\tapplyData(data) {\r\n\t\tthis.options.data = data;\r\n\t\tlet min, max;\r\n\r\n\t\t// Get highest and lowest value\r\n\t\tObject.keys(data.values).forEach(countryCode => {\r\n\t\t\tconst value = parseInt(data.values[countryCode][data.applyData], 10);\r\n\t\t\tmax === null && (max = value);\r\n\t\t\tmin === null && (min = value);\r\n\t\t\tvalue > max && (max = value);\r\n\t\t\tvalue < min && (min = value);\r\n\t\t});\r\n\r\n\t\tdata.data[data.applyData].thresholdMax && (max = Math.min(max, data.data[data.applyData].thresholdMax));\r\n\t\tdata.data[data.applyData].thresholdMin && (min = Math.max(min, data.data[data.applyData].thresholdMin));\r\n\r\n\t\t// Loop through countries and set colors\r\n\t\tObject.keys(countries).forEach(countryCode => {\r\n\t\t\tconst element = document.getElementById(this.id + '-map-country-' + countryCode);\r\n\t\t\tif (!element) return;\r\n\t\t\tif (!data.values[countryCode]) {\r\n\t\t\t\telement.setAttribute('fill', this.options.colorNoData);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst value = Math.max(min, parseInt(data.values[countryCode][data.applyData], 10));\r\n\t\t\tconst ratio = max === min ? 1 : Math.max(0, Math.min(1, (value - min) / (max - min)));\r\n\t\t\tconst color = getColor(this.options.colorMax, this.options.colorMin, ratio);\r\n\t\t\telement.setAttribute('fill', color);\r\n\t\t});\r\n\t\tif (this.options.fitToData) {\r\n\t\t\tconst { offsetWidth: mapWidth, offsetHeight: mapHeight } = this.mapWrapper;\r\n\t\t\tconst scaleFactor = mapWidth / (mapWidth > mapHeight ? 2000 : 1001);\r\n\t\t\tconst mapCenterPoint = [mapWidth / 2, mapHeight / 2];\r\n\t\t\tconst points = Object.keys(data.values).map(countryCode => {\r\n\t\t\t\treturn this.mapImage.querySelector(`[data-id=\"${countryCode}\"]`);\r\n\t\t\t}).filter(path => path != null).reduce((accumulator, path) => {\r\n\t\t\t\tconst pathDefinition = (path.attributes.d.value.match(/[A-Za-z][\\d.,-]+/g) || []).map(string => {\r\n\t\t\t\t\tconst command = string.charAt(0);\r\n\t\t\t\t\tconst coordinates = string.substring(1).split(string.match(',') ? ',' : /(?<=\\d)(?=-)/g).map(coordinate => parseFloat(coordinate.trim()));\r\n\t\t\t\t\tcommand.match(/^[Hh]$/g) && coordinates.push(0);\r\n\t\t\t\t\tcommand.match(/^[Vv]$/g) && coordinates.unshift(0);\r\n\t\t\t\t\treturn { command, coordinates };\r\n\t\t\t\t});\r\n\t\t\t\tlet currentPoint = [...pathDefinition[0].coordinates];\r\n\t\t\t\tpathDefinition.forEach(definition => {\r\n\t\t\t\t\tif (definition.command.match(/^[A-Z]$/g)) {\r\n\t\t\t\t\t\tcurrentPoint = [...definition.coordinates];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst [x, y] = currentPoint;\r\n\t\t\t\t\t\tcurrentPoint = [x + definition.coordinates[0], y + definition.coordinates[1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefinition.absoluteCoordinates = currentPoint;\r\n\t\t\t\t});\r\n\t\t\t\tpathDefinition.forEach(definition => {\r\n\t\t\t\t\tdefinition.absoluteCoordinates = [definition.absoluteCoordinates[0] * scaleFactor, definition.absoluteCoordinates[1] * scaleFactor];\r\n\t\t\t\t});\r\n\t\t\t\treturn [...accumulator, ...pathDefinition.map(a => a.absoluteCoordinates)];\r\n\t\t\t}, []);\r\n\t\t\tthis.resetMapZoom();\r\n\t\t\tif (points.length > 0) {\r\n\t\t\t\tconst minX = Math.min(...points.map(([x]) => x));\r\n\t\t\t\tconst minY = Math.min(...points.map(([, y]) => y));\r\n\t\t\t\tconst maxX = Math.max(...points.map(([x]) => x));\r\n\t\t\t\tconst maxY = Math.max(...points.map(([, y]) => y));\r\n\t\t\t\tconst boundingBoxWidth = maxX - minX;\r\n\t\t\t\tconst boundingBoxHeight = maxY - minY;\r\n\t\t\t\tconst xZoomFactor = 2000 * scaleFactor / boundingBoxWidth;\r\n\t\t\t\tconst yZoomFactor = 1001 * scaleFactor / boundingBoxHeight;\r\n\t\t\t\tthis.mapPanZoom.pan({ x: mapCenterPoint[0] - (minX + boundingBoxWidth / 2), y: mapCenterPoint[1] - (minY + boundingBoxHeight / 2) });\r\n\t\t\t\tthis.mapPanZoom.zoom(Math.round(Math.min(xZoomFactor, yZoomFactor) * .8));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetCountryName(countryCode) {\r\n\t\treturn this.options.countryNames && this.options.countryNames[countryCode] ? this.options.countryNames[countryCode] : countries[countryCode];\r\n\t}\r\n};"],"sourceRoot":""}